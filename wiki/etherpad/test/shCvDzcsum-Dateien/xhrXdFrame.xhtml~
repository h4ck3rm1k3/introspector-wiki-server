<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html [
  <!ENTITY % htmlDTD
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "DTD/xhtml1-strict.dtd">
  %htmlDTD;
  <!ENTITY % netErrorDTD
    SYSTEM "chrome://global/locale/netError.dtd">
  %netErrorDTD;

<!ENTITY loadError.label "Seiten-Ladefehler">
<!ENTITY retry.label "Nochmals versuchen">

<!-- Specific error messages -->

<!ENTITY connectionFailure.title "Fehler: Verbindung fehlgeschlagen">
<!ENTITY connectionFailure.longDesc "&sharedLongDesc;">

<!ENTITY deniedPortAccess.title "Fehler: Port aus Sicherheitsgründen blockiert">
<!ENTITY deniedPortAccess.longDesc "">

<!ENTITY dnsNotFound.title "Fehler: Server nicht gefunden">
<!ENTITY dnsNotFound.longDesc "
<ul>
  <li>Bitte überprüfen Sie die Adresse auf Tippfehler, wie
    <strong>ww</strong>.beispiel.de statt
    <strong>www</strong>.beispiel.de</li>
  <li>Wenn Sie auch keine andere Website aufrufen können, überprüfen Sie bitte die 
	Netzwerk-/Internetverbindung.</li>
  <li>Wenn Ihr Computer oder Netzwerk von einer Firewall oder einem Proxy geschützt wird, stellen Sie bitte sicher,
	dass &brandShortName; auf das Internet zugreifen darf.</li>
</ul>
">

<!ENTITY fileNotFound.title "Fehler: Datei nicht gefunden">
<!ENTITY fileNotFound.longDesc "
<ul>
  <li>Bitte überprüfen Sie die Adresse auf Rechtschreib-, Groß-/Kleinschreibungs- oder andere Fehler.</li>
  <li>Bitte überprüfen Sie, ob die Adresse umbenannt, gelöscht oder verschoben wurde.</li>
</ul>
">


<!ENTITY generic.title "Fehler: Anfrage konnte nicht ausgeführt werden">
<!ENTITY generic.longDesc "
<p>&brandShortName; konnte die Seite aus unbekanntem Grund nicht laden.</p>
">

<!ENTITY malformedURI.title "Fehler: Ungültige Adresse">
<!ENTITY malformedURI.longDesc "
<ul>
  <li>Web-Adressen sehen für gewöhnlich folgendermaßen aus:
    <strong>http://www.beispiel.de/</strong></li>
  <li>Bitte stellen Sie sicher, dass Sie nicht den umgekehrten, s
	ondern den einfachen Schrägstrich verwenden (<strong>/</strong>).</li>
</ul>
">

<!ENTITY netInterrupt.title "Fehler: Datenübertragung unterbrochen">
<!ENTITY netInterrupt.longDesc "&sharedLongDesc;">

<!ENTITY netOffline.title "Fehler: Offline-Modus">
<!ENTITY netOffline.longDesc "
<ul>
  <li>Wählen Sie &quot;Offline arbeiten&quot; im Datei-Menü ab, versuchen Sie es dann nochmals.</li>
</ul>
">

<!ENTITY contentEncodingError.title "Content-Encoding-Fehler">
<!ENTITY contentEncodingError.longDesc "
<ul>
  <li>Kontaktieren Sie bitte den Inhaber der Website, um ihn über dieses Problem zu informieren.</li> 
</ul>
">

<!ENTITY unsafeContentType.title "Unsicherer Dateityp">
<!ENTITY unsafeContentType.longDesc "
<ul>
  <li>Bitte kontaktieren Sie die Webseitenbetreiber, um sie über dieses Problem zu informieren.</li>
</ul>
">

<!ENTITY netReset.title "Fehler: Verbindung unterbrochen">
<!ENTITY netReset.longDesc "&sharedLongDesc;">

<!ENTITY netTimeout.title "Fehler: Netzwerk-Zeitüberschreitung">
<!ENTITY netTimeout.longDesc "&sharedLongDesc;">

<!ENTITY protocolNotFound.title "Fehler: unbekanntes Protokoll">
<!ENTITY protocolNotFound.longDesc "
<ul>
  <li>Eventuell müssen Sie andere Software installieren, um diese Adresse aufrufen zu können.</li>
</ul>
">

<!ENTITY proxyConnectFailure.title "Fehler: Proxy-Server verweigert die Verbindung">
<!ENTITY proxyConnectFailure.longDesc "
<ul>
  <li>Überprüfen Sie bitte, ob die Proxy-Einstellungen korrekt sind</li>
  <li>Kontaktieren Sie bitte Ihren Netzwerk-Administrator, um sicherzustellen, dass der Proxy-Server 
	funktioniert</li>
</ul>
">

<!ENTITY proxyResolveFailure.title "Fehler: Proxy-Server nicht gefunden">
<!ENTITY proxyResolveFailure.longDesc "
<ul>
  <li>Überprüfen Sie bitte, ob die Proxy-Einstellungen korrekt sind.</li>
  <li>Überprüfen Sie bitte, ob eine Netzwerk-/Internet-Verbindung besteht.</li>
  <li>Wenn Ihr Computer oder Netzwerk von einer Firewall oder einem Proxy geschützt wird, stellen Sie bitte sicher,
	dass &brandShortName; auf das Internet zugreifen darf.</li>
</ul>
">

<!ENTITY redirectLoop.title "Fehler: Umleitungsfehler">
<!ENTITY redirectLoop.longDesc "
<ul>
  <li>Dieses Problem kann manchmal auftreten, wenn Cookies deaktiviert oder abgelehnt 
	werden.</li>
</ul>
">

<!ENTITY unknownSocketType.title "Fehler: Unerwartete Antwort">
<!ENTITY unknownSocketType.longDesc "
<ul>
  <li>Bitte stellen Sie sicher, dass auf Ihrem System der Personal-Security-Manager 
	installiert ist.</li>
  <li>Dies kann mit einer nicht-standardgemäßen Konfiguration des Servers zusammenhängen.</li>
</ul> 
">

<!ENTITY nssFailure2.title "Fehler: Gesicherte Verbindung fehlgeschlagen">
<!ENTITY nssFailure2.longDesc "
<ul>
  <li>Die Website kann nicht angezeigt werden, da die Authentizität der erhaltenen Daten nicht verifiziert werden konnte.</li>
  <li>Kontaktieren Sie bitte den Inhaber der Website, um ihn über dieses Problem zu informieren. Alternativ können Sie auch die Funktion im Hilfe-Menü verwenden, um diese Website als fehlerhaft zu melden.</li>
</ul>
">

<!ENTITY nssBadCert.title "Sichere Verbindung fehlgeschlagen">
<!ENTITY nssBadCert.longDesc2 "
<ul>
  <li>Dies könnte ein Problem mit der Konfiguration des Servers sein oder jemand, der vorgibt, 
	der Server zu sein.</li>
  <li>Falls Sie früher bereits erfolgreich eine Verbindung zu dem Server aufgebaut haben, 
	könnte dies ein vorübergehender Fehler sein. Versuchen Sie es in diesem Fall später noch einmal.</li>
</ul>
">

<!ENTITY sharedLongDesc "
<ul>
  <li>Die Website könnte vorübergehend nicht erreichbar sein, versuchen Sie es bitte 
	später nochmals.</li>
  <li>Wenn Sie auch keine andere Website aufrufen können, überprüfen Sie bitte die 
	Netzwerk-/Internetverbindung.</li>
  <li>Wenn Ihr Computer oder Netzwerk von einer Firewall oder einem Proxy geschützt wird, 
	stellen Sie bitte sicher, dass &brandShortName; auf das Internet zugreifen darf.</li>
</ul>
">

<!ENTITY malwareBlocked.title "Angreifende Website vermutet!">
<!ENTITY malwareBlocked.longDesc "
<p>Angreifende Websites versuchen Programme zu installieren, die private Daten stehlen, Ihren Computer benutzen, um andere anzugreifen oder Ihr System beschädigen</p>
<p>Website-Inhaber, die glauben, dass ihre Website fälschlicherweise als angreifende Website gemeldet wurde, können unter <a href='http://www.stopbadware.org/home/reviewinfo' > eine erneute Einschätzung beantragen</a>.</p>
">

<!ENTITY phishingBlocked.title "Vermuteter Web-Betrug!">
<!ENTITY phishingBlocked.longDesc "
<p>Falls Sie hier persönliche Daten eingeben, müssen Sie mit Identitätsdiebstahl oder sonstigem Betrug rechnen.</p>
<p>Diese Art von Internet-Betrug ist auch bekannt als Phishing. Dabei versuchen Kriminelle in betrügerischer Absicht, Webseiten oder E-Mails nachzuahmen, denen Sie eventuell vertrauen.</p>
">

<!ENTITY securityOverride.linkText "Oder Sie können eine Ausnahme hinzufügen…">
<!ENTITY securityOverride.getMeOutOfHereButton "Website verlassen!">
<!ENTITY securityOverride.exceptionButtonLabel "Ausnahme hinzufügen…">

<!-- LOCALIZATION NOTE (securityOverride.warningText) - Do not translate the
contents of the <xul:button> tags.  The only language content is the label= field,
which uses strings already defined above. The button is included here (instead of
netError.xhtml) because it exposes functionality specific to firefox. -->

<!ENTITY securityOverride.warningText "
<p>Sie sollten keine Ausnahme hinzufügen, wenn Sie nicht absolutes Vertrauen in die Sicherheit Ihrer aktuellen Verbindung haben oder wenn Sie bisher keine Warnung für diesen Server erhalten haben.</p>

<xul:button xmlns:xul='http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul' id='getMeOutOfHereButton' label='&securityOverride.getMeOutOfHereButton;'/>
<xul:button xmlns:xul='http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul' id='exceptionDialogButton' label='&securityOverride.exceptionButtonLabel;'/>
">
  <!ENTITY % globalDTD
    SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
]>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is mozilla.org code.
   -
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation.
   - Portions created by the Initial Developer are Copyright (C) 1998
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Adam Lock <adamlock@netscape.com>
   -   William R. Price <wrprice@alumni.rice.edu>
   -   Henrik Skupin <mozilla@hskupin.info>
   -   Jeff Walden <jwalden+code@mit.edu>
   -   Johnathan Nightingale <johnath@mozilla.com>
   -   Ehsan Akhgari <ehsan.akhgari@gmail.com>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Seiten-Ladefehler</title>
    <link rel="stylesheet" href="xhrXdFrame_data/netError.css" type="text/css" media="all" />
    <!-- If the location of the favicon is changed here, the FAVICON_ERRORPAGE_URL symbol in
         toolkit/components/places/src/nsFaviconService.h should be updated. -->
    <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png" />

    <script type="application/x-javascript"><![CDATA[
      // Error url MUST be formatted like this:
      //   moz-neterror:page?e=error&u=url&d=desc
      //
      // or optionally, to specify an alternate CSS class to allow for
      // custom styling and favicon:
      //
      //   moz-neterror:page?e=error&u=url&s=classname&d=desc

      // Note that this file uses document.documentURI to get
      // the URL (with the format from above). This is because
      // document.location.href gets the current URI off the docshell,
      // which is the URL displayed in the location bar, i.e.
      // the URI that the user attempted to load.

      function getErrorCode()
      {
        var url = document.documentURI;
        var error = url.search(/e\=/);
        var duffUrl = url.search(/\&u\=/);
        return decodeURIComponent(url.slice(error + 2, duffUrl));
      }

      function getCSSClass()
      {
        var url = document.documentURI;
        var matches = url.match(/s\=([^&]+)\&/);
        // s is optional, if no match just return nothing
        if (!matches || matches.length < 2)
          return "";

        // parenthetical match is the second entry
        return decodeURIComponent(matches[1]);
      }

      function getDescription()
      {
        var url = document.documentURI;
        var desc = url.search(/d\=/);

        // desc == -1 if not found; if so, return an empty string
        // instead of what would turn out to be portions of the URI
        if (desc == -1)
          return "";

        return decodeURIComponent(url.slice(desc + 2));
      }

      function retryThis(buttonEl)
      {
        // Session history has the URL of the page that failed
        // to load, not the one of the error page. So, just call
        // reload(), which will also repost POST data correctly.
        try {
          location.reload();
        } catch (e) {
          // We probably tried to reload a URI that caused an exception to
          // occur;  e.g. a non-existent file.
        }

        buttonEl.disabled = true;
      }

      function initPage()
      {
        var err = getErrorCode();
        
        // if it's an unknown error or there's no title or description
        // defined, get the generic message
        var errTitle = document.getElementById("et_" + err);
        var errDesc  = document.getElementById("ed_" + err);
        if (!errTitle || !errDesc)
        {
          errTitle = document.getElementById("et_generic");
          errDesc  = document.getElementById("ed_generic");
        }

        var title = document.getElementById("errorTitleText");
        if (title)
        {
          title.parentNode.replaceChild(errTitle, title);
          // change id to the replaced child's id so styling works
          errTitle.id = "errorTitleText";
        }

        var sd = document.getElementById("errorShortDescText");
        if (sd)
          sd.textContent = getDescription();

        var ld = document.getElementById("errorLongDesc");
        if (ld)
        {
          ld.parentNode.replaceChild(errDesc, ld);
          // change id to the replaced child's id so styling works
          errDesc.id = "errorLongDesc";
        }

        // remove undisplayed errors to avoid bug 39098
        var errContainer = document.getElementById("errorContainer");
        errContainer.parentNode.removeChild(errContainer);

        var className = getCSSClass();
        if (className && className != "expertBadCert") {
          // Associate a CSS class with the root of the page, if one was passed in,
          // to allow custom styling.
          // Not "expertBadCert" though, don't want to deal with the favicon
          document.documentElement.className = className;

          // Also, if they specified a CSS class, they must supply their own
          // favicon.  In order to trigger the browser to repaint though, we
          // need to remove/add the link element. 
          var favicon = document.getElementById("favicon");
          var faviconParent = favicon.parentNode;
          faviconParent.removeChild(favicon);
          favicon.setAttribute("href", "chrome://global/skin/icons/" + className + "_favicon.png");
          faviconParent.appendChild(favicon);
        }
        if (className == "expertBadCert") {
          showSecuritySection();
        }
        
        if (err == "nssBadCert") {
          // Remove the "Try again" button for security exceptions, since it's
          // almost certainly useless.
          document.getElementById("errorTryAgain").style.display = "none";
          document.getElementById("errorPageContainer").setAttribute("class", "certerror");
          addDomainErrorLink();
        }
        else {
          // Remove the override block for non-certificate errors.  CSS-hiding
          // isn't good enough here, because of bug 39098
          var secOverride = document.getElementById("securityOverrideDiv");
          secOverride.parentNode.removeChild(secOverride);
        }
      }
      
      function showSecuritySection() {
        // Swap link out, content in
        document.getElementById('securityOverrideContent').style.display = '';
        document.getElementById('securityOverrideLink').style.display = 'none';
      }
      
      /* In the case of SSL error pages about domain mismatch, see if
         we can hyperlink the user to the correct site.  We don't want
         to do this generically since it allows MitM attacks to redirect
         users to a site under attacker control, but in certain cases
         it is safe (and helpful!) to do so.  Bug 402210
      */
      function addDomainErrorLink() {
        // Rather than textContent, we need to treat description as HTML
        var sd = document.getElementById("errorShortDescText");
        if (sd) {
          var desc = getDescription();
          
          // sanitize description text - see bug 441169
          
          // First, find the index of the <a> tag we care about, being careful not to
          // use an over-greedy regex
          var re = /<a id="cert_domain_link" title="([^"]+)">/;
          var result = re.exec(desc);
          if(!result)
            return;
          
          // Remove sd's existing children
          sd.textContent = "";

          // Everything up to the link should be text content
          sd.appendChild(document.createTextNode(desc.slice(0, result.index)));
          
          // Now create the link itself
          var anchorEl = document.createElement("a");
          anchorEl.setAttribute("id", "cert_domain_link");
          anchorEl.setAttribute("title", result[1]);
          anchorEl.appendChild(document.createTextNode(result[1]));
          sd.appendChild(anchorEl);
          
          // Finally, append text for anything after the closing </a>
          sd.appendChild(document.createTextNode(desc.slice(desc.indexOf("</a>") + "</a>".length)));
        }

        var link = document.getElementById('cert_domain_link');
        if (!link)
          return;
        
        var okHost = link.getAttribute("title");
        var thisHost = document.location.hostname;
        var proto = document.location.protocol;

        // If okHost is a wildcard domain ("*.example.com") let's
        // use "www" instead.  "*.example.com" isn't going to
        // get anyone anywhere useful. bug 432491
        okHost = okHost.replace(/^\*\./, "www.");

        /* case #1: 
         * example.com uses an invalid security certificate.
         *
         * The certificate is only valid for www.example.com
         *
         * Make sure to include the "." ahead of thisHost so that
         * a MitM attack on paypal.com doesn't hyperlink to "notpaypal.com"
         *
         * We'd normally just use a RegExp here except that we lack a
         * library function to escape them properly (bug 248062), and
         * domain names are famous for having '.' characters in them,
         * which would allow spurious and possibly hostile matches.
         */
        if (endsWith(okHost, "." + thisHost))
          link.href = proto + okHost;

        /* case #2:
         * browser.garage.maemo.org uses an invalid security certificate.
         *
         * The certificate is only valid for garage.maemo.org
         */
        if (endsWith(thisHost, "." + okHost))
          link.href = proto + okHost;
      }
      
      function endsWith(haystack, needle) {
        return haystack.slice(-needle.length) == needle;
      }

    ]]></script>
  </head>

  <body dir="ltr">

    <!-- ERROR ITEM CONTAINER (removed during loading to avoid bug 39098) -->
    

    <!-- PAGE CONTAINER (for styling purposes only) -->
    <div id="errorPageContainer">
    
      <!-- Error Title -->
      <div id="errorTitle">
        <h1 id="errorTitleText">Fehler: Server nicht gefunden</h1>
      </div>
      
      <!-- LONG CONTENT (the section most likely to require scrolling) -->
      <div id="errorLongContent">
      
        <!-- Short Description -->
        <div id="errorShortDesc">
          <p id="errorShortDescText">Der Server unter 1923822751.comet.doc.etherpad.org konnte nicht gefunden werden.</p>
        </div>

        <!-- Long Description (Note: See netError.dtd for used XHTML tags) -->
        <div id="errorLongDesc">
<ul>
  <li>Bitte überprüfen Sie die Adresse auf Tippfehler, wie
    <strong>ww</strong>.beispiel.de statt
    <strong>www</strong>.beispiel.de</li>
  <li>Wenn Sie auch keine andere Website aufrufen können, überprüfen Sie bitte die 
	Netzwerk-/Internetverbindung.</li>
  <li>Wenn Ihr Computer oder Netzwerk von einer Firewall oder einem Proxy geschützt wird, stellen Sie bitte sicher,
	dass Namoroka auf das Internet zugreifen darf.</li>
</ul>
</div>

        <!-- Override section - For ssl errors only.  Removed on init for other
             error types.  -->
        
      </div>

      <!-- Retry Button -->
      <xul:button xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" id="errorTryAgain" label="Nochmals versuchen" oncommand="retryThis(this);"/>

    </div>

    <!--
    - Note: It is important to run the script this way, instead of using
    - an onload handler. This is because error pages are loaded as
    - LOAD_BACKGROUND, which means that onload handlers will not be executed.
    -->
    <script type="application/x-javascript">initPage();</script>

  </body>
</html>